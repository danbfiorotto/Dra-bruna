name: Site CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'site-bruna/**'
      - 'design-tokens/**'
      - '.github/workflows/site-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'site-bruna/**'
      - 'design-tokens/**'
      - '.github/workflows/site-ci.yml'

env:
  NODE_VERSION: '18'
  WORKING_DIRECTORY: './site-bruna'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            site-bruna/package-lock.json
            design-tokens/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
      
      - name: Lint design tokens
        run: npm run lint --workspace=design-tokens

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            site-bruna/package-lock.json
            design-tokens/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type check
        run: npm run type-check
      
      - name: Type check design tokens
        run: npm run build --workspace=design-tokens

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, type-check]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            site-bruna/package-lock.json
            design-tokens/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build design tokens
        run: npm run build --workspace=design-tokens
      
      - name: Build site
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: site-bruna/.next/
          retention-days: 7

  preview-deploy:
    name: Preview Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            site-bruna/package-lock.json
            design-tokens/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: site-build
          path: site-bruna/.next/
      
      - name: Deploy to preview
        run: |
          echo "Preview deployment would happen here"
          echo "PR: ${{ github.event.pull_request.number }}"
          echo "Branch: ${{ github.head_ref }}"
        # TODO: Implement actual preview deployment
        # Example: Vercel, Netlify, or custom preview environment

  production-deploy:
    name: Production Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            site-bruna/package-lock.json
            design-tokens/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: site-build
          path: site-bruna/.next/
      
      - name: Deploy to production
        run: |
          echo "Production deployment would happen here"
          echo "Commit: ${{ github.sha }}"
        # TODO: Implement actual production deployment
        # Example: Vercel, Netlify, or custom production environment
